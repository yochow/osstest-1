#!/bin/bash

# This is part of "osstest", an automated testing framework for Xen.
# Copyright (C) 2009-2013 Citrix Inc.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


set -e

branch=$1
xenbranch=$2
blessing=$3
buildflight=$4

flight=`./cs-flight-create $blessing $branch`

. ap-common
. cri-common

defsuite=`getconfig DebianSuite`

xenrt_images=/usr/groups/images/autoinstall

if [ x$buildflight = x ]; then

  if [ "x$BUILD_LVEXTEND_MAX" != x ]; then
     BUILD_RUNVARS+=" build_lvextend_max=$BUILD_LVEXTEND_MAX "
  fi

  for arch in ${BUILD_ARCHES- i386 amd64 armhf }; do

    if [ "x$arch" = xdisable ]; then continue; fi

    case "$arch" in
    armhf)
      case "$xenbranch" in
      xen-3.*-testing) continue;;
      xen-4.0-testing) continue;;
      xen-4.1-testing) continue;;
      xen-4.2-testing) continue;;
      esac
      pvops_kernel="
	tree_linux=$TREE_LINUX_ARM
	revision_linux=${REVISION_LINUX_ARM:-${DEFAULT_REVISION_LINUX_ARM}}
      "
      ;;
    *)
      pvops_kernel="
	tree_linux=$TREE_LINUX
	revision_linux=${REVISION_LINUX:-${DEFAULT_REVISION_LINUX}}
      "
      ;;
    esac

    case "$arch" in
    armhf) suite="wheezy";;
    *)     suite=$defsuite;;
    esac

    if [ $suite != $defsuite ] ; then
        suite_runvars="host_suite=$suite"
    else
        suite_runvars=
    fi

    case "$arch" in
    i386|amd64) enable_xend=true;;
    *) enable_xend=false;;
    esac

    eval "
	arch_runvars=\"\$ARCH_RUNVARS_$arch\"
    "

    build_hostflags=share-build-$suite-$arch,arch-$arch,suite-$suite,purpose-build

    ./cs-job-create $flight build-$arch build				     \
		arch=$arch enable_xend=$enable_xend						     \
	tree_qemu=$TREE_QEMU	     \
	tree_qemuu=$TREE_QEMU_UPSTREAM	     \
	tree_xen=$TREE_XEN		     \
		$RUNVARS $BUILD_RUNVARS $BUILD_XEN_RUNVARS $arch_runvars     \
		$suite_runvars                                               \
		host_hostflags=$build_hostflags    \
		revision_xen=$REVISION_XEN				     \
		revision_qemu=$REVISION_QEMU				     \
		revision_qemuu=$REVISION_QEMU_UPSTREAM

    ./cs-job-create $flight build-$arch-pvops build-kern		     \
		arch=$arch kconfighow=xen-enable-xen-config		     \
	tree_xen=$TREE_XEN		     \
		$RUNVARS $BUILD_RUNVARS $BUILD_LINUX_RUNVARS $arch_runvars   \
		$suite_runvars                                               \
		host_hostflags=$build_hostflags    \
		xen_kernels=linux-2.6-pvops				     \
		revision_xen=$REVISION_XEN				     \
		$pvops_kernel						\
		${TREEVCS_LINUX:+treevcs_linux=}${TREEVCS_LINUX}	\
		tree_linuxfirmware=$TREE_LINUXFIRMWARE			     \
		revision_linuxfirmware=$REVISION_LINUXFIRMWARE

    case "$arch" in
    armhf) continue;; # don't do any other kernel builds
    esac

    if [ "x$REVISION_LINUX_OLD" != xdisable ]; then

      ./cs-job-create $flight build-$arch-oldkern build			\
		arch=$arch						\
	tree_qemu=$TREE_QEMU	\
	tree_qemuu=$TREE_QEMU_UPSTREAM	     \
	tree_xen=$TREE_XEN		\
		$RUNVARS $BUILD_RUNVARS $BUILD_LINUX_OLD_RUNVARS	\
		$arch_runvars $suite_runvars				\
		host_hostflags=$build_hostflags \
		xen_kernels=linux-2.6-xen				\
		revision_xen=$REVISION_XEN				\
		revision_qemu=$REVISION_QEMU			        \
		revision_qemuu=$REVISION_QEMU_UPSTREAM			\
	tree_linux=http://xenbits.xen.org/linux-2.6.18-xen.hg	\
        revision_linux=$REVISION_LINUX_OLD

    fi

    if false && [ $arch = i386 -a "x$REVISION_LINUX_XCP" != xdisable ]; then
      # XCP dom0 kernel is 32-bit only

      ./cs-job-create $flight build-$arch-xcpkern build-kern		      \
		$RUNVARS $BUILD_RUNVARS $BUILD_LINUX_XCP_RUNVARS	      \
		$arch_runvars $suite_runvars				      \
		arch=$arch						\
	kconfighow=intree-buildconfigs kimagefile=arch/x86/boot/vmlinuz \
		host_hostflags=$build_hostflags     \
		tree_xen=$TREE_XEN	      \
		revision_xen=$REVISION_XEN				      \
	tree_linux=$TREEBASE_LINUX_XCP.hg    \
     tree_pq_linux=$TREEBASE_LINUX_XCP.pq.hg \
        revision_linux=$REVISION_LINUX_XCP				      \
        revision_pq_linux=$REVISION_PQ_LINUX_XCP

    fi

  done

else

  bfi=$buildflight.

fi

stripy () {
        local out_vn="$1"; shift
        local out_0="$1"; shift
        local out_1="$1"; shift
        local out_val=0
        local this_val
        local this_cmp
        while [ $# != 0 ]; do
                this_val="$1"; shift
                this_cmp="$1"; shift
                if [ "x$this_val" = "x$this_cmp" ]; then
                        out_val=$(( $out_val ^ 1 ))
                fi
        done
        eval "$out_vn=\"\$out_$out_val\""
}

job_create_test () {
	local job=$1; shift
	local recipe=$1; shift
	local toolstack=$1; shift

        local job_md5=`echo "$job" | md5sum`
        job_md5="${job_md5%  -}"

        if [ "x$JOB_MD5_PATTERN" != x ]; then
                case "$job_md5" in
                $JOB_MD5_PATTERN)       ;;
                *)                      return;;
                esac
        fi

	case "$branch" in
	qemu-upstream-*)
		case " $* " in
		*" device_model_version=qemu-xen "*)
			;;
		*)
			: "suppressed $job"
			return;;
		esac
		;;
	*)
	        case "$job" in
		*-qemuu-*)
	           if [ "x$toolstack" != xxl ]; then return; fi

	           case "$job" in
	           *-win*)
	                      case "$job_md5" in
	                      *[0-a]) return;;
	                      esac
	                      ;;
	           esac
	           ;;
		esac
		;;
        esac

	./cs-job-create $flight $job $recipe toolstack=$toolstack \
		$RUNVARS $TEST_RUNVARS $most_runvars "$@"
}

for xenarch in ${TEST_ARCHES- i386 amd64 armhf } ; do

  if [ "x$xenarch" = xdisable ]; then continue; fi

  case "$xenarch" in
  armhf)
	# Arm from 4.3 onwards only
	case "$xenbranch" in
	xen-3.*-testing) continue;;
	xen-4.0-testing) continue;;
	xen-4.1-testing) continue;;
	xen-4.2-testing) continue;;
	*) ;;
	esac
	;;
  i386)
	# 32-bit Xen is dropped from 4.3 onwards
	case "$xenbranch" in
	xen-3.*-testing) ;;
	xen-4.0-testing) ;;
	xen-4.1-testing) ;;
	xen-4.2-testing) ;;
	*) continue ;;
	esac
	;;
  esac

  case "$xenarch" in
  armhf) suite="wheezy";;
  *)     suite=$defsuite;;
  esac

  if [ $suite != $defsuite ] ; then
      suite_runvars="host_suite=$suite"
  else
      suite_runvars=
  fi

  case "$xenbranch" in
  xen-3.*-testing)	onetoolstack=xend ;;
  xen-4.0-testing)	onetoolstack=xend ;;
  xen-4.1-testing)	onetoolstack=xend ;;
  *)			onetoolstack=xl ;;
  esac

  for kern in ''; do

    case $kern in
    '')
                kernbuild=pvops
		kernkind=pvops
		;;
    -xcpkern)
                kernbuild=xcpkern
		kernkind=2627
		if [ "x$REVISION_LINUX_XCP" = xdisable ]; then continue; fi
		;;
    *)		echo >&2 "kernkind ?  $kern"; exit 1 ;;
    esac

    for dom0arch in i386 amd64 armhf; do

      case ${xenarch}_${dom0arch} in
	  amd64_amd64) ;;
	  amd64_i386) ;;
	  i386_i386) ;;
	  armhf_armhf) ;;
	  *) continue ;;
      esac

      eval "
	  arch_runvars=\"\$ARCH_RUNVARS_$dom0arch\"
      "

      if [ x$kern = x-xcpkern -a $dom0arch != i386 ]; then continue; fi

      most_hostflags="arch-$dom0arch,arch-xen-$xenarch,suite-$suite,purpose-test"

      most_runvars="
		arch=$dom0arch			        	\
		xenbuildjob=${bfi}build-$xenarch        	\
		kernbuildjob=${bfi}build-$dom0arch-$kernbuild 	\
		buildjob=${bfi}build-$dom0arch	        	\
		kernkind=$kernkind		        	\
		$arch_runvars $suite_runvars
		"
      if [ $dom0arch = armhf ]; then
	  job_create_test test-$xenarch$kern-$dom0arch-xl test-debian xl \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags
	  continue
      fi

      job_create_test test-$xenarch$kern-$dom0arch-pv test-debian xend \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags

      job_create_test test-$xenarch$kern-$dom0arch-xl test-debian xl \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags

        for qemuu_suffix in '' -qemut -qemuu; do
          case "$qemuu_suffix" in
          '')
                qemuu_runvar=''
                ;;
          -qemut)
                qemuu_runvar=device_model_version=qemu-xen-traditional
                ;;
          -qemuu)
                case $xenbranch in
                xen-3.*-testing) continue;;
                xen-4.0-testing) continue;;
                xen-4.1-testing) continue;;
                esac
                qemuu_runvar=device_model_version=qemu-xen
                ;;
          esac

        for vcpus in '' 1; do
            case "$vcpus" in
            '') vcpus_runvars=''; vcpus_suffix='' ;;
            *) vcpus_runvars=guests_vcpus=$vcpus; vcpus_suffix=-vcpus$vcpus ;;
            esac

            if [ "x$vcpus" = x ] || \
               [ "$xenarch$kern-$dom0arch" = "amd64-i386" ]; then

        stripy toolstack xend xl \
                "$vcpus" 1 \
                "$kern" '' \
                "$xenarch" i386 \
                "$dom0arch" i386

        toolstack_runvars="toolstack=$toolstack"

      job_create_test \
                test-$xenarch$kern-$dom0arch-$toolstack$qemuu_suffix-winxpsp3$vcpus_suffix \
                test-win $toolstack $qemuu_runvar \
		win_image=winxpsp3.iso $vcpus_runvars	\
		all_hostflags=$most_hostflags,hvm

            fi
        done

      if [ $xenarch = amd64 ]; then

      job_create_test test-$xenarch$kern-$dom0arch-xl$qemuu_suffix-win7-amd64 \
                test-win xl $qemuu_runvar \
		win_image=win7-x64.iso \
		all_hostflags=$most_hostflags,hvm

      fi

      if [ $xenarch = amd64 -a $dom0arch = i386 -a "$kern" = "" ]; then

	for cpuvendor in amd intel; do

    job_create_test test-$xenarch$kern-$dom0arch$qemuu_suffix-rhel6hvm-$cpuvendor \
						test-rhelhvm xl \
		redhat_image=rhel-server-6.1-i386-dvd.iso		\
		all_hostflags=$most_hostflags,hvm-$cpuvendor \
                $qemuu_runvar

	done

      fi

      done # qemuu_suffix

      job_create_test test-$xenarch$kern-$dom0arch-pair test-pair \
		$onetoolstack \
                !host !host_hostflags \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags,equiv-1

      if [ $xenarch = amd64 -a $dom0arch = amd64 ]; then

       for pin in '' -pin; do

      job_create_test test-$xenarch$kern-$dom0arch-xl-sedf$pin  \
           test-debian xl guests_vcpus=4 xen_boot_append="sched=sedf loglvl=all ${pin:+dom0_vcpus_pin}" linux_boot_append='loglevel=9 debug' \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags

       done

      fi

      if [ $xenarch = amd64 -a $dom0arch = i386 ]; then

      job_create_test test-$xenarch$kern-$dom0arch-xl-multivcpu \
                        test-debian xl guests_vcpus=4 \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags

      job_create_test test-$xenarch$kern-$dom0arch-xl-credit2  \
           test-debian xl guests_vcpus=4 xen_boot_append='sched=credit2'      \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		all_hostflags=$most_hostflags

      fi

      if [ $xenarch = amd64 -a $dom0arch = amd64 -a "$kern" = "" ]; then

        for cpuvendor in intel; do

      job_create_test test-$xenarch$kern-$dom0arch-xl-pcipt-intel \
                        test-debian-nomigr xl guests_vcpus=4 \
		debian_kernkind=$kernkind				  \
		debian_arch=$dom0arch   				  \
		debian_pcipassthrough_nic=host				  \
		all_hostflags=$most_hostflags,hvm-$cpuvendor,pcipassthrough-nic

        done

      fi

    done

  done

done

echo $flight
