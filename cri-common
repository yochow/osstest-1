# -*- bash -*-

# This is part of "osstest", an automated testing framework for Xen.
# Copyright (C) 2009-2013 Citrix Inc.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


. cri-getconfig

umask 002

cached_repo () {
	local repo=$1
	local options=$2
	local cache=`getconfig GitCacheProxy`

	if [ x$cache != x ] ; then
		echo "$cache$repo%20$options"
	else
		echo "$repo"
	fi
}

besteffort_repo () {
	local repo=$1
	cached_repo "$1" '[fetch=try]'
}

repo_tree_rev_fetch_git () {
	local treename=$1
	local remoteurl=$2
	local remotetag=$3
	local localtag=$4
	local proxy=`getconfig GitCacheProxy`
	case $remoteurl in
	$proxy*)
		local realurl="$remoteurl" ;;
	git://*|http://*|https://*)
		local realurl="$proxy$remoteurl" ;;
	*)
		local realurl="$remoteurl" ;;
	esac
	if ! test -d $repos/$treename; then
	        git clone --bare $realurl $repos/$treename >&2
	fi
	cd $repos/$treename
	git fetch -f $realurl $remotetag:$localtag >&2
	git rev-parse $localtag^0
}

select_prevxenbranch () {
	local b
	local p
	for b in $(./mg-list-all-branches) ; do # already sorted by version
		case "$b" in
		xen*)
			if [ "x$b" = "x$xenbranch" ] ; then
				break
			else
				p=$b
			fi
			;;
		*)	;;
		esac
	done
	prevxenbranch=$p
}

select_xenbranch () {
	case "$branch" in
	xen-*)			tree=xen;	xenbranch=$branch ;;
	qemu-mainline)		tree=qemuu;	xenbranch=xen-unstable	qemuubranch=qemu-mainline;;
        qemu-upstream-*)    tree=qemuu; xenbranch=xen-${branch#qemu-upstream-};;
	linux)			tree=linux;	xenbranch=xen-unstable ;;
	linux-*)		tree=linux;	xenbranch=xen-unstable ;;
	linuxfirmware)	    tree=linuxfirmware;	xenbranch=xen-unstable ;;
	libvirt)		tree=libvirt;	xenbranch=xen-unstable ;;
	rumpuserxen)	      tree=rumpuserxen; xenbranch=xen-unstable ;;
	seabios)		tree=seabios;	xenbranch=xen-unstable ;;
	ovmf)			tree=ovmf;	xenbranch=xen-unstable ;;
	distros-*)		tree=none;	xenbranch=xen-unstable ;;
	osstest)		tree=osstest;	xenbranch=xen-unstable ;;
	esac
	if [ "x$tree" = xlinux ]; then
		linuxbranch=$branch
	else
		linuxbranch=''
	fi
	if [ x$qemuubranch = x ]; then
		qemuubranch="qemu-upstream-${xenbranch#xen-}"
	fi

	select_prevxenbranch
}

select_branch () {
	select_xenbranch

	check_stop $branch.
	check_stop $xenbranch.any.

	mrof="$branch.mro"

	if test -f branch-settings.$branch; then
		. branch-settings.$branch
	fi
}
