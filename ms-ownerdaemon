#!/usr/bin/tclsh8.4
# -*- Tcl -*- 
# usage: ./ms-ownerdaemon  ... | logger

source daemonlib.tcl

readconfig

proc chan-destroy-stuff {chan} {
    upvar #0 chanawait($chan) await
    catch { unset await }

    upvar #0 chantasks($chan) tasks
    if {![info exists tasks]} return

    transaction {
        puts-chan-desc $chan "-- $tasks"
        foreach task $tasks {
            pg_execute dbh "
                UPDATE tasks
                   SET live = 'f'
                 WHERE taskid = $task
            "
        }
    }
    puts-chan-desc $chan "== $tasks"
    unset tasks

    after idle await-endings-notify
}

proc await-endings-notify {} {
    global chanawait
    foreach chan [array names chanawait] {
        for-chan $chan {
            puts-chan $chan "!OK await-endings notify"
        }
    }
}

proc cmd/create-task {chan desc} {
    upvar #0 chantasks($chan) tasks
    if {[info exists tasks]} {
        set taskdesc "$desc-[llength $tasks]"
    } else {
        set taskdesc $desc
    }
    transaction {
        pg_execute dbh "
            INSERT INTO tasks
                        ( type,  refkey,               refinfo,         live)
                 VALUES ('ownd', [pg_quote $taskdesc], [clock seconds], 't')
        "
        set nrows [pg_execute -array av dbh "
            SELECT taskid
              FROM tasks
             WHERE refkey = [pg_quote $taskdesc]
        "]
        if {$nrows != 1} { error "multiple $taskdesc!" }
        set task $av(taskid)
    }
    lappend tasks $task
    puts-chan $chan "OK created-task $task ownd $taskdesc"
}

proc cmd/await-endings {chan desc} {
    upvar #0 chanawait($chan) await
    set await 1
    puts-chan $chan "OK await-endings"
}

proc banner {chan} {
    return "OK ms-ownerdaemon"
}

main-daemon $c(OwnerDaemonPort) {
    db-open
    
    transaction {
        set nrows [pg_execute dbh "
            UPDATE tasks
               SET refkey = 'previous ' || refkey
             WHERE type = 'ownd'
               AND refkey NOT LIKE 'previous %'
        "]
        log "started ($nrows staler tasks)"
    }
}
