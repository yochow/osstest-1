#!/bin/bash
set -ex

. cri-args-hostlists
branch=$1; shift
select_branch

check_stop bisect.

sticky=bisecting-sticky-branch

anyflagfile=tmp/bisected-any.$branch

with-lock-ex -w $mrof.lock bash -xec "
	if test -e $mrof.in; then
		if test -e $mrof; then mv $mrof $mrof.old; fi
                rm -f $anyflagfile
		mv $mrof.in $mrof
	fi
"

if ! test -f $mrof; then
        rm -f $sticky
        echo "$branch no mro"
        exit 0
fi

if grep '^tolerable$' $mrof >/dev/null 2>&1; then
	# this approach relies on us getting a look-in in between
	# each daily run, which should be OK.
	rm -f tmp/bisected.$branch.*
fi

if test -f $sticky; then
        read <$sticky sticky_branch
        if [ "x$sticky_branch" != "x$branch" ]; then
                echo "$branch but sticky $sticky_branch, skipping"
                exit 0
        fi
fi

compute_state () {
        reportfile=tmp/$flight.bisection-report
        summaryfile=tmp/$flight.bisection-summary
        bisleaf=bisect.$branch.$job.$laundered_testid

        echo "computing $branch $job $testid $*"

	if [ "x$basisflight" = x ]; then
		basisflight_arg=''
	else
		basisflight_arg=--basis-flight=$basisflight
	fi

        set +e
        ./cs-bisection-step --graph-out=$OSSTEST_HTML_DIR/$bisleaf \
                --summary-out=$summaryfile \
		$basisflight_arg $failflight_arg \
                --blessings=$OSSTEST_BLESSING,$OSSTEST_BLESSING-bisect \
                "$@" $branch $job $testid >$reportfile 2>&1
        rc=$?
        set -e

        case $rc in
        0)      echo work to do; return ;;
        4)      how=complete ;;
        8)      how=inconclusive ;;
        12)     how=inconsistent ;;
        16)     how=unreproducible ;;

        *)      echo >&2 "FAILED $branch $job $testid $rc $* "
                cat >&2 $reportfile
                exit 1
                ;;
        esac

        echo ended $how
        touch $flagfile
        touch $anyflagfile
        send_bisection_email $how -bisectdone
        rm -f $sticky
        exit 0
}

perhaps_bisect_step () {
        laundered_testid=${testid//\//--}
        flagfile=tmp/bisected.$branch.$job.$laundered_testid
        if test -f $flagfile; then
                echo "already completed $branch $job $testid"
                return
        fi

        flight=`./cs-flight-create $OSSTEST_BLESSING $branch`
        flight_executed=false

        compute_state --flight=$flight
        send_bisection_email "$flight: testing" -bisectrun

#        echo $branch >$sticky.new
#        mv -f $sticky.new $sticky

        if test -e $anyflagfile; then
                subpriority=100
                inhibitqueue=0
        else
                subpriority=-100
                inhibitqueue=300
        fi
        export OSSTEST_RESOURCE_SUBPRIORITY=$subpriority
        
        execute_flight $flight $OSSTEST_BLESSING-bisect
        flight_executed=true

	./mg-queue-inhibit $inhibitqueue "bisected $branch $flight" ||:

        compute_state
        send_bisection_email "$flight: tested" -bisectrun
	exit 0
}


send_bisection_email () {
        echo emailing "$2" "$1"

        exec 3>tmp/$flight.email
        cat >&3 $OSSTEST_EMAIL_HEADER$2
        cat >&3 <<END
Subject: [$branch bisection] $1 $job

branch $xenbranch
xen branch $xenbranch
job $job
test $testid

END
        cat >&3 $summaryfile
        cat >&3 <<END

For bisection revision-tuple graph see:
   $OSSTEST_HTML_URL/$bisleaf.html
Revision IDs in each graph node refer, respectively, to the Trees above.

----------------------------------------
END
        cat >&3 $reportfile
        if $flight_executed; then
                echo >&3 ----------------------------------------
                ./sg-report-flight >&3 $flight
                ./cr-publish-flight-logs $flight
        fi
        exec 3>&-
        send_email tmp/$flight.email
}        

exec <$mrof
while read keyword value; do
	if [ "x$keyword" = xflight ]; then
		failflight=$value
		failflight_arg="--fail-flight=$failflight"
	fi
done

exec <$mrof
while read keyword job testid basisflight; do
        if [ "x$keyword" = xregression ]; then
                perhaps_bisect_step
        fi
done

echo nothing to do
rm $mrof

exit 0
