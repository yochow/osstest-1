#!/usr/bin/perl -w

use strict qw(vars);
use DBI;
use Osstest;

readconfig();
opendb_state();
our $ho= selecthost($r{host});
our $gho= selectguest(@ARGV ? $ARGV[0] : 'guest');

our ($cfgfile,$cfgstash,$cfg);

sub savecfg () {
    $cfgfile= $r{"$gho->{Guest}_cfgpath"};
    $cfgfile =~ m,([^/]+)$, or die "$cfgfile";
    my $cfgleaf= $1;
    $cfgstash= "$stash/$cfgleaf";
    target_getfile($ho,10, $cfgfile, "$cfgstash.orig");
    $cfg= get_filecontents("$cfgstash.orig");
}

sub ether () {
#    $cfg =~ s/^ [ \t]*
#        ( vif [ \t]* \= [ \t]* \[ [ \t]* [\'\"]
#          [^\n\'\"]* \b mac= ) [0-9a-fA-F:]+ \b ( [^\n\'\"]* [\'\"]
#          [^\n\'\"]* )
#          /
#            my $n= $1.$gho->{Ether}.$2;
#            logm("changed vif to $n");
#            $n;
#          /mxe
#        or die "no ether?";
#
    store_runvar("$gho->{Guest}_tcpcheckport", 22);
}

sub access () {
    guest_umount_lv($ho, $gho);
    target_cmd_root($ho, <<END);
        set -ex
        mount /dev/$gho->{Vg}/$gho->{Lv} /mnt
        perl -i~ -pe "s/^root:[^:]+:/root::/" /etc/shadow
        mkdir -p /mnt/root/.ssh /mnt/etc/ssh
        cp -a /root/.ssh/* /mnt/root/.ssh/.
        cp -a /etc/ssh/ssh_host_*key* /mnt/etc/ssh/.
END
}

sub console () {
    my $console= $r{"$gho->{Guest}_console"};
    return unless length $console;

    target_cmd_root($ho, <<END);
        set -ex
        perl -i~ -ne "
            next if m/^xc:/;
            print \\\$_ or die \\\$!;
            next unless s/^1:/xc:/;
            s/tty1/$console/;
            print \\\$_ or die \\\$!;
        " /mnt/etc/inittab;
END

    my $xextra= "console=$console";
    my $orgextra;
    if ($cfg =~ s/^(extra=[ \t]*[\'\"](.*)[\'\"][ \t]*)\n/\n/m) {
        $orgextra= $2;
        logm("extra was: $1");
        $orgextra =~ s/\bconsole=\S+\s*//g;
        $orgextra.= ' ';
    } elsif ($cfg =~ m/^extra\b.*/) {
        die "$& ?";
r    } else {
        $orgextra= '';
    }
    my $extra= "extra='$orgextra$xextra'";
    logm("extra: $extra");
    $cfg .= "\n$extra\n";
}

sub filesystems () {
    my $rootdev= $r{"$gho->{Guest}_rootdev"};
    return unless defined($rootdev) && length($rootdev);
    logm("adjusting root: $rootdev");
    $cfg =~ s,^(root \s* = \s* ['"] /dev/)sda(\d+ \s .*)$, $1.$rootdev.$2 ,mxe;

    target_cmd_root($ho, <<END);
        set -ex
        perl -i~ -pe "
            s,^(/dev/)sda(\\\d+),\\\${1}$rootdev\\\$2,;
        " /mnt/etc/fstab
END
}

sub unmount () {
    guest_umount_lv($ho, $gho);
}

sub writecfg () {
    my $h= new IO::File $cfgstash, 'w' or die "$cfgstash $!";
    print $h $cfg or die $!;
    close $h or die $!;
    target_putfile_root($ho,10, $cfgstash, $cfgfile);
}

sub kernkind () {
    my $kernkind= $r{"$gho->{Guest}_kernkind"};
    if ($kernkind eq 'pvops') {
	store_runvar("$gho->{Guest}_rootdev", 'xvda');
    }
    if ($kernkind !~ m/2618/) {
	store_runvar("$gho->{Guest}_console", 'hvc0');
    }
}

savecfg();
ether();
kernkind();
access();
console();
filesystems();
writecfg();
unmount();
