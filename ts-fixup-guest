#!/usr/bin/perl -w

use strict qw(vars);
use DBI;
use Osstest;

readconfig();
opendb_state();
our $ho= selecthost($r{host});

my $gn= 'guest';
our $guestname= "one.$gn.osstest";
our $ether= 'f4:fe:1b:60:78:c9';

our ($cfgfile,$cfgstash,$cfg);

sub savecfg () {
    $cfgfile= $r{"${gn}_cfgpath"};
    $cfgfile =~ m,([^/]+)$, or die "$cfgfile";
    my $cfgleaf= $1;
    $cfgstash= "$stash/$cfgleaf";
    target_getfile($ho,10, $cfgfile, "$cfgstash.orig");
    $cfg= get_filecontents("$cfgstash.orig");
}

sub ether () {
    $cfg =~ s/^ [ \t]*
        ( vif [ \t]* \= [ \t]* \[ [ \t]* [\'\"]
          [^\n\'\"]* \b mac= ) [0-9a-fA-F:]+ \b ( [^\n\'\"]* [\'\"]
          [^\n\'\"]* )
          /
            my $n= $1.$ether.$2;
            logm("changed vif to $n");
            $n;
          /mxe
        or die "no ether?";
    store_runvar("${gn}_ether", $ether);
}

sub access () {
    guest_umount_lv($ho, $gn);
    target_cmd_root($ho, <<END);
        set -ex
        mount /dev/$r{"${gn}_vg"}/$r{"${gn}_disk_lv"} /mnt
        perl -i~ -pe "s/^root:[^:]+:/root::/" /etc/shadow
        mkdir -p /mnt/root/.ssh /mnt/etc/ssh
        cp -a /root/.ssh/* /mnt/root/.ssh/.
        cp -a /etc/ssh/ssh_host_*key* /mnt/etc/ssh/.
END
}

sub console () {
    my $console= $r{guests_console};
    return unless length $console;

    target_cmd_root($ho, <<END);
        set -ex
        perl -i~ -ne "
            next if m/^xc:/;
            print \\\$_ or die \\\$!;
            next unless s/^1:/xc:/;
            s/tty1/$console/;
            print \\\$_ or die \\\$!;
        " /mnt/etc/inittab;
END

    my $xextra= "console=$console";
    my $orgextra;
    if ($cfg =~ s/^(extra=[ \t]*[\'\"](.*)[\'\"][ \t]*)\n/\n/m) {
        $orgextra= $2;
        logm("extra was: $1");
        $orgextra =~ s/\bconsole=\S+\s*//g;
        $orgextra.= ' ';
    } elsif ($cfg =~ m/^extra\b.*/) {
        die "$& ?";
    } else {
        $orgextra= '';
    }
    my $extra= "extra='$orgextra$xextra'";
    logm("extra: $extra");
    $cfg .= "\n$extra\n";
}

sub unmount () {
    guest_umount_lv($ho, $gn);
}

sub writecfg () {
    my $h= new IO::File $cfgstash, 'w' or die "$cfgstash $!";
    print $h $cfg or die $!;
    close $h or die $!;
    target_putfile_root($ho,10, $cfgstash, $cfgfile);
}

savecfg();
ether();
access();
console();
writecfg();
unmount();
