#!/usr/bin/perl -w

use strict qw(vars);
use DBI;
use Osstest;
use File::Path;
use POSIX;

readconfig();
opendb_state();
our $ho= selecthost($r{host});

my $leaf= "build.$flight.$job";
my $builddir= "/home/osstest/$leaf";

sub checkout () {
    my $kerns= $r{xen_kernels};
    $kerns='' unless defined $kerns;
    $kerns =~ s/,/ /g;
    
    target_cmd($ho, "rm -rf $builddir && mkdir $builddir", 60);

    build_clone($ho, 'xen', $builddir, 'xen-unstable');

    target_cmd_build($ho, 100, $builddir, <<END.
        cd $builddir/xen-unstable
	>.config
	echo >>.config GIT_HTTP=y
	echo >>.config QEMU_REMOTE='$r{tree_qemu}'
END
               (length($r{revision_qemu}) ? <<END : '').
	echo >>.config QEMU_TAG='$r{revision_qemu}'
END
               (length($r{revision_linux}) ? <<END : '').
	echo >>.config export XEN_LINUX_GIT_REMOTEBRANCH='$r{revision_linux}'
END
               (length($kerns) ? <<END : '')
	echo >>.config KERNELS='$kerns'
END
               );
}

sub build () {
    target_cmd_build($ho, 1000, $builddir, <<END);
        cd xen-unstable
        perl -i.bak -pe '
		next unless m/^exit 0/;
                print "setopt CONFIG_HIGHPTE n\\n" or die \$!;
                print "setopt CONFIG_TUN y\\n" or die \$!;
        ' buildconfigs/enable-xen-config
END
    target_cmd_build($ho, 6000, $builddir, <<END);
        cd xen-unstable
        (make -j4 2>&1 && touch ../build-ok-stamp) |tee ../log
        test -f ../build-ok-stamp
        echo ok.
END
}

sub collectversions () {
    store_revision($ho, 'qemu', "$builddir/xen-unstable/tools/ioemu-dir");

    my $whichkerns= target_cmd_output($ho, <<END);
        set -e
        cd $builddir/xen-unstable
        echo linux*/.{git,hg}
END
    my (@kerndirs,@vcss,@revisions);
    foreach my $kerndir (sort split / /, $whichkerns) {
        next if $kerndir =~ m/\*/;
        die "$kerndir ?" unless $kerndir =~ m/^linux.*\.(git|hg)$/;
        my $vcs= $1;
        push @kerndirs, $kerndir;
        push @vcss, $vcs;
        push @revisions,
            vcs_dir_revision($ho,"$builddir/xen-unstable/$kerndir", $vcs);
    }
    store_vcs_revision('linux',"@revisions","@vcss");
    store_runvar('built_xen_kerneldirs',"@kerndirs");
}

sub divide () {
    target_cmd_build($ho, 100, $builddir, <<END);
        cd xen-unstable/dist
        mkdir kerninstall xeninstall
        if test -d install/boot; then
            mv install/boot kerninstall/.
            if test -d install/lib/modules; then
                mkdir kerninstall/lib
                mv install/lib/modules kerninstall/lib/.
            fi
            if test -f kerninstall/boot/xen.gz; then
                mkdir xeninstall/boot
                mv kerninstall/boot/xen* xeninstall/boot/.
            fi
        fi
END
}

sub stash () {
    foreach my $part ('', 'kern', 'xen') {
        built_stash($ho, $builddir,
                    "xen-unstable/dist/${part}install",
                    "${part}dist");
    }
}

checkout();
build();
collectversions();
divide();
stash();
