#!/usr/bin/tclsh8.4
# -*- Tcl -*- 
# usage: ./sg-run-tests <flight>

source osstestlib.tcl

readconfig

proc main {} {
    global flight jobinfo builds anyfailed

    set-flight
    db-open
    
    set tests {}
    set anyfailed 0

    pg_execute -array jobinfo dbh "
        SELECT job, recipe FROM jobs
			WHERE	flight=$flight
			AND	job like 'test%'
			AND   ( status = 'queued'
			  OR	status = 'preparing'
			  OR	status = 'retriable' )
		ORDER BY job
    " run-job

    if {$anyfailed} {
        logputs stdout "at least one test failed"
    }
}

proc run-job {} {
    global jobinfo builds flight

    if {![prepare-job $jobinfo(job)]} return

    set ok 1
    setstatus running

    if {$ok} { catching-otherwise blocked   check-not-blocked             }
    if {$ok} { catching-otherwise broken  { run-ts ts-host-install-twice } }
    if {$ok} { catching-otherwise fail      prepare-host                  }
    if {$ok} { catching-otherwise fail      run-job/$jobinfo(recipe)      }
               catching-otherwise broken    capture-logs
    if {$ok} { setstatus pass                                             }
}

proc catching-otherwise {failst script} {
    global anyfail flight jobinfo
    upvar 1 ok ok

    if {[catch {
        uplevel 1 $script
    } emsg]} {
        logputs stderr "$flight.$jobinfo(job) $script failed: $emsg"
        set ok 0
        set anyfailed 1
	setstatus $failst
    }
}

proc capture-logs {} {
    run-ts ts-logs-capture
}

proc check-not-blocked {} {
    run-ts ts-xen-build-check
}

proc prepare-host {} {
    run-ts ts-xen-install
    run-ts ts-host-reboot
}

proc run-job/test-debian {} {
    run-ts ts-debian-install
    run-ts ts-debian-fixup debian
    run-ts ts-guest-start debian
    test-guest debian
}

proc run-job/test-win {} {
    run-ts ts-windows-install
    test-guest win
}

proc test-guest {g} {
    run-ts ts-guest-saverestore $g
    run-ts ts-guest-localmigrate $g
    run-ts ts-guest-stop $g
}

main
