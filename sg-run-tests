#!/usr/bin/tclsh8.4
# -*- Tcl -*- 
# usage: ./sg-run-tests <flight>

source osstestlib.tcl

readconfig

proc main {} {
    global flight jobinfo builds anyfailed

    set-flight
    db-open
    
    set tests {}
    set anyfailed 0

    pg_execute -array jobinfo dbh "
        SELECT job, recipe FROM jobs
			WHERE	flight=$flight
			AND	job like 'test%'
			AND   ( status = 'queued'
			  OR	status = 'preparing' )
		ORDER BY job
    " run-job

    if {$anyfailed} {
        puts "at least one test failed"
    }
}

proc run-job {} {
    global jobinfo c builds flight

    puts "prepping $flight.$jobinfo(job)"

    job-set-host $flight $jobinfo(job) $c(Host)

    set ok 1
    setstatus running

    catching-otherwise blocked check-not-blocked
    catching-otherwise broken prepare-host
    catching-otherwise fail run-job/$jobinfo(recipe)

    run-ts ts-logs-capture
}

proc catching-otherwise {failst script} {
    global anyfail
    upvar 1 ok ok
    if {!$ok} return

    if {[catch {
        uplevel 1 $script
    } emsg]} {
        puts stderr "$flight.$jobinfo(job) $script failed: $emsg"
        set ok 0
        set anyfailed 1
	setstatus blocked
    }
}

proc check-not-blocked {} {
    run-ts ts-xen-build-check
}

proc prepare-host {} {
    run-ts ts-host-install
    run-ts ts-xen-install
    run-ts ts-host-reboot
}

proc run-job/test-debian {} {
    run-ts ts-debian-install
    run-ts ts-debian-fixup debian
    run-ts ts-guest-start debian
    test-guest debian
}

proc run-job/test-win {} {
    run-ts ts-windows-install
    test-guest win
}

proc test-guest {g} {
    run-ts ts-guest-saverestore $g
    run-ts ts-guest-stop $g
}

main
