#!/usr/bin/perl

use strict qw(vars);
use DBI;
use Osstest;

readconfig();
opendb_state();
our $ho= selecthost($r{host});

my $leaf= "build.$flight.$job";
my $builddir= "/home/osstest/$leaf";

sub checkout () {
    target_cmd($ho, "rm -rf $builddir && mkdir $builddir", 60);

    build_clone($ho, 'linux', $builddir, 'linux');
    
    if (length($r{tree_pq_linux})) {
        build_clone($ho, 'pq_linux', $builddir, 'linux/.hg/patches');
        
        target_cmd_build($ho, 1000, $builddir, <<END);
            cd $builddir/linux
            hg qpush -a
END
    }
}

sub build () {
    target_cmd_build($ho, 1000, $builddir, <<END);
	cd linux
	perl -i.bak -pe '
		s/^(CONFIG_(?:AGP|DRM|FB)(?:_.*)?)=m\$/# \$1 is not set/;
		s/^CONFIG_(?: VGA | VIDEO | FRAMEBUFFER | BOOTSPLASH
			XEN_FRAMEBUFFER ).*//x;
	' buildconfigs/linux-defconfig_*[^~]
	make -f buildconfigs/Rules.mk defconfig </dev/null
END
    target_cmd_build($ho, 6000, $builddir, <<END);
	cd linux
        (make -j4 all modules 2>&1 && touch ../build-ok-stamp) |tee ../log
        test -f ../build-ok-stamp
        echo ok.
END
}

sub kinstall () {
    my $kernfile= 'arch/x86/boot/vmlinux-stripped';
    target_cmd_build($ho, 100, $builddir, <<END);
	mkdir -p dist/boot dist/lib/modules
	cd linux
	make -j4 INSTALL_MOD_PATH=$builddir/dist modules_install
	cp System.map $builddir/dist/boot/
	cp $kernfile $builddir/dist/boot/vmlinuz
	cp .config $builddir/dist/boot/config
END
    my $kernver= target_cmd_output($ho, <<END);
	cd $builddir/dist/lib/modules
	echo *
END
    die "$kernver ?" unless $kernver =~ m/^\d\S+$/;
    logm("built $kernver");

    target_cmd_build($ho, 100, $builddir, <<END);
	cd dist/boot
	for f in vmlinuz System.map config; do
		mv \$f \$f-$kernver
	done
END
}

checkout();
build();
kinstall();
built_stash($ho, $builddir, 'dist', 'kerndist');
