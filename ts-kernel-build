#!/usr/bin/perl
# This is part of "osstest", an automated testing framework for Xen.
# Copyright (C) 2009-2013 Citrix Inc.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict qw(vars);
use DBI;
use Osstest;
use Osstest::TestSupport;
use Osstest::BuildSupport;

tsreadconfig();

our $reuse = 0;
while (@ARGV and $ARGV[0] =~ m/^-/) {
    $_= shift @ARGV;
    last if m/^--$/;
    if (m/^--reuse$/) {
	$reuse = 1;
    } else {
	die "$_ ?";
    }
}

selectbuildhost(\@ARGV);
builddirsprops();

my $archparms = {
    'arm64' => {                          Image => 'Image',  Dtbs => 1 },
    'armhf' => { DefConfig => 'multi_v7', Image => 'zImage', Dtbs => 1 },
    'i386'  => {                          Image => 'bzImage'           },
    'amd64' => {                          Image => 'bzImage'           }
};
my $parms = $archparms->{ $r{arch} };

sub enable_xen_config ();

sub checkout () {
    return if $reuse;

    prepbuilddirs();

    build_clone($ho, 'linux', $builddir, 'linux');

    if (length($r{tree_pq_linux})) {
        build_clone($ho, 'pq_linux', $builddir, 'linux/.hg/patches');
        
        target_cmd_build($ho, 1000, $builddir, <<END);
            cd $builddir/linux
            hg qpush -a
END
    }

    if ($r{tree_linuxfirmware}) {
	build_clone($ho, 'linuxfirmware', $builddir, 'linux-firmware');
    }
}

# Some runes for finding out what might be missing
#
# On working boot (eg Debian kernel eg before ts-xen-install):
#   lsmod | perl -ne 'm/^\w+/ or die; push @e, "+= $&\\.o" if $& ne 
#         "Module"; END { print "git-grep '\''"; print join "\\|", @e; 
#         print "'\'' | perl -ne '\'' print \"# \",\$&,\" is not set\\n\" 
#         if m/\\bCONFIG_[0-9A-Z_]+\\b/ '\''\n" }'
# This prints a big git-grep | perl rune
# Run said rune in a clone of linux.git
# Output of git-grep |perl rune is list of "# CONFIG_... is not set"
# Copy to a file on relevant host, and grep the osstest kernel's config
#   grep -f t /boot/config-3.14.34+ |less

our $config_hardware= <<END;
setopt CONFIG_DM_CRYPT m
setopt CONFIG_DM_SNAPSHOT m

setopt CONFIG_BLK_DEV_NBD m

setopt CONFIG_ATA_GENERIC y
setopt CONFIG_SCSI_SAS_ATA y

setopt CONFIG_SATA_SIL24 m
setopt CONFIG_SATA_SVW m
setopt CONFIG_SATA_MV m
setopt CONFIG_SATA_NV m
setopt CONFIG_SATA_QSTOR m
setopt CONFIG_SATA_PROMISE m
setopt CONFIG_SATA_SIL m
setopt CONFIG_SATA_SIS m
setopt CONFIG_SATA_ULI m
setopt CONFIG_SATA_VIA m
setopt CONFIG_SATA_VITESSE m
setopt CONFIG_SATA_INIC162X m
setopt CONFIG_SCSI_TGT m
setopt CONFIG_SCSI_ISCSI_ATTRS m
setopt CONFIG_SCSI_SAS_LIBSAS m
setopt CONFIG_SCSI_SAS_HOST_SMP=y
setopt CONFIG_SCSI_SAS_LIBSAS_DEBUG=y
setopt CONFIG_SCSI_LOWLEVEL=y
setopt CONFIG_ISCSI_TCP m
setopt CONFIG_SCSI_CXGB3_ISCSI m
setopt CONFIG_BE2ISCSI m
setopt CONFIG_BLK_DEV_3W_XXXX_RAID m
setopt CONFIG_SCSI_3W_9XXX m
setopt CONFIG_SCSI_ACARD m
setopt CONFIG_SCSI_AACRAID m
setopt CONFIG_SCSI_AIC7XXX m
setopt CONFIG_SCSI_AIC79XX m
setopt CONFIG_SCSI_AIC94XX m
setopt CONFIG_SCSI_ISCI m
setopt CONFIG_SCSI_MVSAS m
setopt CONFIG_SCSI_MVSAS_DEBUG=y
setopt CONFIG_SCSI_DPT_I2O m
setopt CONFIG_SCSI_ADVANSYS m
setopt CONFIG_SCSI_ARCMSR m
setopt CONFIG_SCSI_MPT2SAS m
setopt CONFIG_SCSI_HPTIOP m
setopt CONFIG_SCSI_BUSLOGIC m
setopt CONFIG_LIBFC m
setopt CONFIG_LIBFCOE m
setopt CONFIG_FCOE m
setopt CONFIG_FCOE_FNIC m
setopt CONFIG_SCSI_DMX3191D m
setopt CONFIG_SCSI_EATA m
setopt CONFIG_SCSI_FUTURE_DOMAIN m
setopt CONFIG_SCSI_GDTH m
setopt CONFIG_SCSI_IPS m
setopt CONFIG_SCSI_INITIO m
setopt CONFIG_SCSI_INIA100 m
setopt CONFIG_SCSI_STEX m
setopt CONFIG_SCSI_SYM53C8XX_2 m
setopt CONFIG_SCSI_IPR m
setopt CONFIG_SCSI_AIC7XXX m
setopt CONFIG_SCSI_AIC79XX m
setopt CONFIG_SCSI_AIC94XX m
setopt CONFIG_SCSI_MVSAS m
setopt CONFIG_SCSI_MVSAS_DEBUG=y
setopt CONFIG_SCSI_DPT_I2O m
setopt CONFIG_SCSI_ADVANSYS m
setopt CONFIG_SCSI_ARCMSR m
setopt CONFIG_SCSI_MPT2SAS m
setopt CONFIG_SCSI_HPTIOP m
setopt CONFIG_SCSI_BUSLOGIC m
setopt CONFIG_LIBFC m
setopt CONFIG_LIBFCOE m
setopt CONFIG_FCOE m
setopt CONFIG_FCOE_FNIC m
setopt CONFIG_SCSI_DMX3191D m
setopt CONFIG_SCSI_EATA m
setopt CONFIG_SCSI_FUTURE_DOMAIN m
setopt CONFIG_SCSI_GDTH m
setopt CONFIG_SCSI_IPS m
setopt CONFIG_SCSI_INITIO m
setopt CONFIG_SCSI_INIA100 m
setopt CONFIG_SCSI_STEX m
setopt CONFIG_SCSI_SYM53C8XX_2 m
setopt CONFIG_SCSI_IPR m
setopt CONFIG_SCSI_QLOGIC_1280 m
setopt CONFIG_SCSI_QLA_FC m
setopt CONFIG_SCSI_QLA_ISCSI m
setopt CONFIG_SCSI_LPFC m
setopt CONFIG_SCSI_DC395x m
setopt CONFIG_SCSI_DC390T m
setopt CONFIG_SCSI_NSP32 m
setopt CONFIG_SCSI_PMCRAID m
setopt CONFIG_SCSI_SRP m
setopt CONFIG_SCSI_BFA_FC n
setopt CONFIG_SCSI_HPSA m

setopt CONFIG_MEGARAID_NEWGEN y
setopt CONFIG_MEGARAID_MM m
setopt CONFIG_MEGARAID_MAILBOX m
setopt CONFIG_MEGARAID_LEGACY m
setopt CONFIG_MEGARAID_SAS m

setopt CONFIG_FIRMWARE_IN_KERNEL y

setopt CONFIG_BNX2 m
setopt CONFIG_BNX2X m
setopt CONFIG_E1000 m
setopt CONFIG_E1000E m
setopt CONFIG_NETXEN_NIC m
setopt CONFIG_IGB m

setopt CONFIG_PCI_IOV y

setopt CONFIG_EXT4_FS m
setopt CONFIG_UFS_FS m
setopt CONFIG_UFS_FS_WRITE y

setopt CONFIG_BLK_DEV_NBD y
# At least with Linux 3.4.77 on wheezy, the nbd module is
# not loaded automatically.

# Enabling Exynos4 forces wierd CONFIG_HZ==200, and we don't
# support that platform anyway.
setopt CONFIG_ARCH_EXYNOS4 n

# Having these on breaks USB
setopt CONFIG_SAMSUNG_USB2PHY n
setopt CONFIG_SAMSUNG_USB3PHY n

# These cause i2c bus timeout errors on boot.
# https://groups.google.com/a/chromium.org/forum/#!topic/chromium-os-reviews/f1DW9NcSPVU?
# http://patchwork.ozlabs.org/patch/337812/
setopt CONFIG_SENSORS_LM90 n
setopt CONFIG_ICS932S401 n

# Enable some additional drivers for Arndale.
setopt CONFIG_PHY_EXYNOS5250_SATA m
setopt CONFIG_USB_EHCI_EXYNOS m
setopt CONFIG_USB_OHCI_EXYNOS m
setopt CONFIG_USB_HSIC_USB3503 m
setopt CONFIG_USB_DWC3 m
setopt CONFIG_USB_DWC3_HOST y
setopt CONFIG_USB_DWC3_EXYNOS m
setopt CONFIG_USB_DWC3_PCI n
setopt CONFIG_PHY_SAMSUNG_USB2 m
setopt CONFIG_PHY_EXYNOS5250_USB2 y
setopt CONFIG_PHY_EXYNOS5_USBDRD m
setopt CONFIG_RTC_DRV_S5M y
setopt CONFIG_COMMON_CLK_S2MPS11 m
setopt CONFIG_I2C_S3C2410 y
setopt CONFIG_MMC_DW m
setopt CONFIG_MMC_DW_EXYNOS m
setopt CONFIG_REGULATOR_S5M8767 m

####

END

our $config_features= <<END;
setopt CONFIG_MD y
setopt CONFIG_BLK_DEV_DM y
setopt CONFIG_DM_UEVENT y

setopt CONFIG_SYSVIPC y

setopt CONFIG_BLK_DEV_LOOP y

setopt CONFIG_PACKET y

# needed for OpenStack
# because: https://bugzilla.redhat.com/show_bug.cgi?id=910619#c6
setopt CONFIG_NETFILTER_ADVANCED y
setopt CONFIG_NETFILTER_XT_TARGET_CHECKSUM m

# Used by OpenStack Tempest to test encrypted volume
setopt CONFIG_CRYPTO_XTS m
END
sub stash_config_edscript ($) {
    my ($settings) = @_;
    my $edscript= "$builddir/change-settings.ed";
    target_putfilecontents_stash($ho,1000,<<'END'.$settings.<<'END',$edscript);
$
?^exit 0
i

END

.
w
q
END
    return $edscript;
}

sub kconfig_overrides ($) {
    my ($to) = @_;
    return '' unless $r{"kconfig_override_$to"};
    my $overrides = '';
    foreach my $override (split /,/, $r{"kconfig_override_$to"}) {
        $overrides .= "setopt $override $to\n";
    }
    return $overrides;
}

sub config_xen_enable_xen_config () {
    my $config_runvars = kconfig_overrides('y');
    $config_runvars .= kconfig_overrides('m');
    $config_runvars .= kconfig_overrides('n');

    my $edscript= stash_config_edscript(<<END);

setopt CONFIG_HIGHMEM64G y

setopt CONFIG_AGP n
setopt CONFIG_DRM n
#setopt CONFIG_FB n
setopt CONFIG_VIDEO n
#setopt CONFIG_FRAMEBUFFER n
setopt CONFIG_BOOTSPLASH n

setopt CONFIG_DEBUG_INFO y
setopt CONFIG_DEBUG_INFO_REDUCED y

setopt CONFIG_XEN_KBDDEV_FRONTEND y

setopt CONFIG_TUN y

setopt CONFIG_DEVTMPFS y

setopt CONFIG_HYPERVISOR_GUEST y

setopt CONFIG_AMD_IOMMU y
setopt CONFIG_AMD_IOMMU_V2 y
setopt CONFIG_INTEL_IOMMU y
setopt CONFIG_INTEL_IOMMU_DEFAULT_ON y
setopt CONFIG_IRQ_REMAP y

$config_hardware
$config_features
$config_runvars
END

    target_putfilecontents_stash($ho,100,enable_xen_config(),
                                 "$builddir/enable-xen-config");

    my $defconfig = $parms->{DefConfig} ?
	$parms->{DefConfig}."_defconfig" : "defconfig";
    target_cmd_build($ho, 1000, $builddir, <<END);
        ed <$edscript enable-xen-config
        chmod +x enable-xen-config
        cd linux
        make $defconfig
        # ARM defconfig omits modules for some reason...
        sed -e "s/^# CONFIG_MODULES is not set\$/CONFIG_MODULES=y/g" -i .config
        ../enable-xen-config .config
        yes '' | make oldconfig
END
    # /;
}

sub config_create_config_sh () {
    die "only x86" unless $r{arch} =~ m/^amd64|i386$/;

    my $xta = $r{arch} eq "amd64" ? "x86_64" : "x86_32";

    target_cmd_build($ho, 1000, $builddir, <<END);
        cd linux
	sh buildconfigs/create_config.sh .config "-xen" $xta
	if [ x$xta = xx86_32 ] ; then
            sed -i.bak -e 's!^CONFIG_HIGHMEM4G=y\$!\# CONFIG_HIGHMEM4G is not set!;s!^\# CONFIG_HIGHMEM64G is not set\$!CONFIG_HIGHMEM64G=y!' .config
	fi
        yes '' | make oldconfig
END
    # /;
}

sub config () {
    my $confighow= $r{kconfighow};
    $confighow =~ s/\W/_/g;
    &{ "config_$confighow" }();
}

sub build () {
    target_cmd_build($ho, 9000, $builddir, <<END);
	cd linux
        (make $makeflags all modules 2>&1 && touch ../build-ok-stamp) |tee ../log
        test -f ../build-ok-stamp
        echo ok.
END
#/
}

sub kinstall () {
    my $kernfile= $r{kimagefile};
    my $karch = $arch_debian2linux{$r{arch}};
    $kernfile = "arch/$karch/boot/$parms->{Image}"
	if !defined $kernfile;

    my $dtbs_install = '';
    $dtbs_install = 'dtbs_install' if $parms->{Dtbs};

    target_cmd_build($ho, 300, $builddir, <<END);
	rm -rf dist
	mkdir -p dist/boot dist/lib/modules
	cd linux
	make $makeflags \\
		INSTALL_PATH=$builddir/dist/boot \\
		INSTALL_MOD_PATH=$builddir/dist \\
		modules_install $dtbs_install
	cp System.map $builddir/dist/boot/
	cp $kernfile $builddir/dist/boot/vmlinuz
	cp .config $builddir/dist/boot/config
END
    my $kernver= target_cmd_output($ho, <<END);
	cd $builddir/dist/lib/modules
	echo *
END
    die "$kernver ?" unless $kernver =~ m/^\d\S+$/;
    logm("built $kernver");

    store_runvar('kernel_ver',$kernver);

    target_cmd_build($ho, 100, $builddir, <<END);
	cd dist/boot
	for f in vmlinuz System.map config; do
		mv \$f \$f-$kernver
	done
END
}

sub fwbuild () {
    target_cmd_build($ho, 500, $builddir, <<END);
	cd linux-firmware
	make SHELL=/bin/bash all
        echo ok.
END
}

sub fwinstall () {
    target_cmd_build($ho, 500, $builddir, <<END);
	cd linux-firmware
	make SHELL=/bin/bash DESTDIR=$builddir/dist install
	echo ok.
END
}

checkout();
config();
build();
kinstall();
if ($r{tree_linuxfirmware}) {
    fwbuild();
    fwinstall();
}
built_stash($ho, $builddir, 'dist', 'kerndist');
built_stash_file($ho, $builddir, 'vmlinux', 'linux/vmlinux');
built_compress_stashed('vmlinux');
built_stash_file($ho, $builddir, 'config', 'linux/.config');

sub enable_xen_config () {
    return <<'END';
#!/bin/sh

set -e

if [ $# -ne 1 ] ; then
	echo "Usage $(basename $0) <config-file>" 1>&2
	exit 1
fi

CONFIG=$1

setopt()
{
	OPTION=$1
	VALUE=$2

	# First remove any existing instances of this option
	sed -e "s/^# ${OPTION} is not set$//g ; s/^${OPTION}=.*$//g" -i "${CONFIG}"

	# Then append the new value
	case ${VALUE} in
	    n)     echo "# ${OPTION} is not set" >> "${CONFIG}" ;;
	    y|m|*) echo "${OPTION}=${VALUE}" >> "${CONFIG}" ;;
	esac
}

setopt CONFIG_PARAVIRT y
setopt CONFIG_PARAVIRT_DEBUG y
setopt CONFIG_PARAVIRT_GUEST y
setopt CONFIG_PARAVIRT_SPINLOCKS y

setopt CONFIG_XEN y
setopt CONFIG_XEN_BLKDEV_FRONTEND y
setopt CONFIG_XEN_NETDEV_FRONTEND y
setopt CONFIG_XEN_KBDDEV_FRONTEND y
setopt CONFIG_XEN_FBDEV_FRONTEND y
setopt CONFIG_XEN_PCIDEV_FRONTEND y
setopt CONFIG_XEN_BALLOON y
setopt CONFIG_XEN_SCRUB_PAGES y
setopt CONFIG_XEN_DEV_EVTCHN y
setopt CONFIG_XEN_BACKEND y
setopt CONFIG_XEN_BLKDEV_BACKEND y
setopt CONFIG_XEN_BLKDEV_TAP y
setopt CONFIG_XEN_NETDEV_BACKEND y
setopt CONFIG_XEN_PCIDEV_BACKEND y
setopt CONFIG_XEN_PCIDEV_BACKEND_VPCI y
setopt CONFIG_XEN_PCIDEV_BACKEND_PASS n
setopt CONFIG_XEN_PCIDEV_BACKEND_SLOT n
setopt CONFIG_XEN_PCIDEV_BE_DEBUG n
setopt CONFIG_XENFS y
setopt CONFIG_XEN_COMPAT_XENFS y
setopt CONFIG_XEN_PCI_PASSTHROUGH y
setopt CONFIG_HVC_XEN y
setopt CONFIG_XEN_MAX_DOMAIN_MEMORY 32
setopt CONFIG_XEN_DEBUG_FS y
setopt CONFIG_XEN_DOM0 y
setopt CONFIG_XEN_SYS_HYPERVISOR y
setopt CONFIG_XEN_GNTDEV y
setopt CONFIG_XEN_PLATFORM_PCI y
setopt CONFIG_XEN_PVH y

setopt CONFIG_VMI y
setopt CONFIG_TUN y

setopt CONFIG_KVM y
setopt CONFIG_KVM_INTEL y
setopt CONFIG_KVM_AMD y
setopt CONFIG_KVM_CLOCK y
setopt CONFIG_KVM_GUEST n
setopt CONFIG_KVM_TRACE n

setopt CONFIG_LGUEST n

setopt CONFIG_LOCALVERSION_AUTO n

setopt CONFIG_BRIDGE y

setopt CONFIG_DEBUG_STACK_USAGE n

setopt CONFIG_MEMORY_HOTPLUG y
setopt CONFIG_MEMORY_HOTREMOVE y

setopt CONFIG_MIGRATION n

setopt CONFIG_ACPI_HOTPLUG_MEMORY n

setopt CONFIG_IKCONFIG y
setopt CONFIG_IKCONFIG_PROC y

# Should all be set one way or another in defconfig but aren't
setopt CONFIG_NUMA n
setopt CONFIG_X86_VSMP n
setopt CONFIG_X86_UV n
setopt CONFIG_CALGARY_IOMMU n
setopt CONFIG_AMD_IOMMU n
setopt CONFIG_MAXSMP n
setopt CONFIG_SPARSEMEM_VMEMMAP n
setopt CONFIG_I7300_IDLE n
setopt CONFIG_DMAR n
setopt CONFIG_INTR_REMAP n
setopt CONFIG_GFS2_FS n
setopt CONFIG_IOMMU_DEBUG n
setopt CONFIG_X86_MCE_INTEL n
setopt CONFIG_X86_MCE_AMD n
setopt CONFIG_CRYPTO_AES_NI_INTEL n
setopt CONFIG_CISS_SCSI_TAPE n

setopt CONFIG_FUSION y
setopt CONFIG_FUSION_SPI m
setopt CONFIG_FUSION_SAS m
setopt CONFIG_FUSION_FC m
setopt CONFIG_FUSION_MAX_SGE 128
setopt CONFIG_FUSION_CTL n
setopt CONFIG_FUSION_LOGGING n

setopt CONFIG_BLK_CPQ_CISS_DA m

setopt CONFIG_FHANDLE y

# Needed for Jessie+ userspace when systemd is used.
setopt CONFIG_CGROUPS y

# Needed for efibootmgr
setopt CONFIG_EFI_VARS y

# APM XGENE
setopt CONFIG_PHY_XGENE y
setopt CONFIG_NET_XGENE y
setopt CONFIG_AHCI_XGENE y
setopt CONFIG_POWER_RESET_XGENE y
setopt CONFIG_RTC_DRV_XGENE y

case ${XEN_TARGET_ARCH} in
    x86_32) setopt CONFIG_64BIT n ;;
    x86_64)
	setopt CONFIG_64BIT y
	setopt CONFIG_IA32_EMULATION y
	setopt CONFIG_IA32_AOUT n
	setopt CONFIG_CRYPTO_AES_X86_64 n
	setopt CONFIG_CRYPTO_SALSA20_X86_64 n
	setopt CONFIG_CRYPTO_TWOFISH_X86_64 n
	;;
    *) ;;
esac

exit 0
END
}
