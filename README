To run osstest in standalone mode:

 - Write a config file
    ~/.osstest/config
   See below.

 - Select the "branch" and job to reproduce.  By default the system
   gives you the "branch" consisting of tests run for the xen-unstable
   push gate.  You need to select a job.

 - Run ./standalone-reset

 - If you have an existing test host and guest set up
   you can run
      OSSTEST_JOB=<job>  ./ts-debian-install host=bedbug
   or some such to install a Debian guest on it.

 - Or you can run
      ./sg-run-job <job>

========================================

Format of config file ~/.osstest/config (you may set OSSTEST_CONFIG to
point to a different file):

Lines containing:
   Name value
or
   Name=  perl expression
or
   Name= <<'END'    or <<END
   blah blah
   END

#-comments and blank lines are ignored.

========================================

Essential config settings for standalone mode:

DnsDomain
   DNS domain to suffix to many things.  No default.
   For example, test box hostnames will by default be qualified
   with this name.

NetNameservers
   Space-separated list of nameserver IPv4 addresses

DebianMirrorHost
   Domain name or address of the Debian mirror to use.
   Set DebianMirrorSubpath to the path inside the mirror if
   your mirror isn't at http://<DebianMirrorHost>/debian/

HostProp_<testbox>_Ether
   MAC address of the box <testbox>.  Only needed if you want
   to use the osstest host and Xen installer.

DebianPreseed
  Text to add to the debian-installer preseed file.  Optional
  but you will need to set some NTP servers here if your firewall
  doesn't permit NTP to Debian's pool.ntp.org servers.

========================================

Config settings relevant only to standalone mode

JobDBStandaloneFilename
   Database file to use to record the "jobs" and their run variables.
   Default: ./standalone.db (sqlite3)

TestHostDomain            defaults to DnsDomain

TestHost_<ident>      where eg <ident> = "host"
TestHost

HostProp_<property>
HostProp_<host>_<property>
HostFlags                flag,flag,flag,...
HostFlags_<host>         flag,!flag,!flag,flag...

HostProp_DhcpWatchMethod
   leases <format> <source>
      where <format> is dhcp3
            <source> is filename (with slash) or <host>:<port>

AuthorizedKeysFiles
     :-separated list of files to concatenate into authorized_keys
AuthorizedKeysAppend
     literal text to add
The keys in ~/.ssh/id_{rsa,dsa}.pub and ~/.ssh/authorized_keys
(if they exist) are copied anyway.

TestHostKeypairPath

HostProp_GenEtherPrefixBase 5e:36:0e:f5
# 	                               :00:01 guest number in job appended
#            in standalone jobdb, ^^^^^ xor'd with low 16 bits of your uid

========================================

General config settings

Stash
Images
Logs

DebianSuite
GuestDebianSuite   defaults to DebianSuite

DebianPreseed      added to existing preseed file

========================================

Host-specific config settigs

NetNameServers

WebspaceFile
WebspaceUrl
WebspaceCommon
WebspaceLog

========================================

Other config settings which might be interesting

JobDB
HostDB
   Class name tails for the job and host databases.

ExecutiveDbnamePat
   Pattern for generating PostgreSQL dbname strings for the executive's
   various databases.  Processed as follows:
     1. <\w+> is replaced with variables:
		 <dbname>    database name
     2. <~/path> </path> <./path> are replaced with contents of specified file 
     3. <[> and <]> are replaced with < and >

ExecutiveDbname_<DB>
   PostgreSQL dbname string for the database <DB>.  Default is to use
   ExecutiveDbnamePat.

PubBaseDir
Results
