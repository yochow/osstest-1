#!/usr/bin/perl -w

use strict qw(vars);
use DBI;
use Osstest;
use Osstest::TestSupport;

tsreadconfig();

our $stage=0;
if (@ARGV && $ARGV[0] =~ m/^--stage(\d+)$/) { $stage=$1; shift @ARGV; }

our ($whhost,$gn) = @ARGV;
$whhost ||= 'host';
$gn ||= 'redhat';

our $ho= selecthost($whhost);

our $ram_mb=    768;
our $disk_mb= 50000;

our $guesthost= "$gn.guest.osstest";
our $gho;

our $xl= toolstack()->{Command};


sub kickstart () {
    my $cryptpw= '$6$anjRJmBbJcrNJGWN$rqvGUhu8ITjvErdIA5C//w2R6b/6wAjHbaF7XF8u3lZg1XI3StthPIE6UII08scOFwASMOepCGpgtsYeCpjqb.';
    my $authkeys= authorized_keys();

    return <<"END";
# Kickstart file automatically generated by anaconda.
# edited by iwj

#version=RHEL6
install
cdrom
lang en_US.UTF-8
network --device eth0 --bootproto dhcp --hostname=$guesthost
keyboard uk
rootpw  --iscrypted $cryptpw
firewall --disabled
authconfig --enableshadow --passalgo=sha512 --enablefingerprint
selinux --disable

sshpw --username=root xenroot --plaintext
sshpw --username=iwj xenroot --plaintext

timezone --utc Europe/London
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb console=ttyS0,$c{Baud}n8"

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

clearpart --all --initlabel
#--drives=sda
#ignoredisk --only-use=sda

#pv.lOpv5Y-s8zb-V13U-mGJ0-poLa-by7u-4stCVC
#physvol

part /boot --fstype=ext4 --size=500
part pv.physvol --grow --size=1
volgroup vg_$guesthost --pesize=4096 pv.physvol
logvol / --fstype=ext4 --name=lv_root --vgname=vg_$guesthost --grow --size=1024 --maxsize=51200
logvol swap --name=lv_swap --vgname=vg_$guesthost --grow --size=1008 --maxsize=2016

#repo --name="Red Hat Enterprise Linux"  --baseurl=file:///mnt/source --cost=100

reboot

\%packages
\@base
\@core
\@perl-runtime
pax
rpmdevtools
rpmlint
\%end

\%post
(
  set -e
  umask 022
  mkdir /root/.ssh
  cd /root/.ssh
  cat <<'ENDKEYS' >authorized_keys
$authkeys
ENDKEYS
)
END
}

our $emptyiso= '/root/empty.iso';

sub prep () {
    target_install_packages_norec($ho, qw(lvm2 rsync genisoimage));

    my $isotimeout= 600;

    $gho= prepareguest($ho, $gn, $guesthost, 22,
                       $disk_mb + 1,
                       100);

    my $newiso= '/root/newiso';
    my $emptydir= '/root/empty-dir';

    my @isogen_base= qw(-R -J -T);
    my @isogen_boot= qw(-b isolinux/isolinux.bin
                        -c isolinux/boot.cat
                        -no-emul-boot
                        -boot-load-size 4
                        -boot-info-table);

    target_cmd_root($ho, <<END, 60);
            mkdir -p $emptydir
            genisoimage -o $emptyiso @isogen_base $emptydir/.
END

    more_prepareguest_hvm($ho,$gho, $ram_mb, $disk_mb,
                          OnReboot => 'preserve',
                          PostImageHook => sub {
        target_cmd_root($ho, <<END, $isotimeout);
            set -x
            umount /mnt ||:
            rm -rf $newiso
            mount -o loop -r $gho->{Rimage} /mnt
            mkdir $newiso
            cp -a /mnt/. $newiso/.
            umount /mnt
END
        target_editfile_root($ho, "$newiso/isolinux/isolinux.cfg", sub {
            while (<EI>) {
                if (m/^\s+append/) {
                    s,$, sshd ks=cdrom:/ks.cfg,;
                    s/\baskmethod\b\S*/ /;
                    s#$# console=ttyS0,$c{Baud}n8#;
                }
                s/^timeout.*/timeout 10/;
                print EO or die $!;
            }
        });

        target_putfilecontents_root_stash($ho, 10, kickstart(),
                                          "$newiso/ks.cfg");

        target_cmd_root($ho, <<END, $isotimeout);
            genisoimage -o $gho->{Rimage} @isogen_base @isogen_boot $newiso/.
END
    });
}

sub start () {
    target_cmd_root($ho, "$xl create $gho->{CfgPath}", 100);
}

sub rewrite_config_nocd () {
    guest_editconfig($ho, $gho, sub {
        if (m/^\s*disk\s*\=/ .. /\]/) {
            s/\Q$gho->{Rimage}\E/$emptyiso/;
        }
        s/^on_reboot.*/on_reboot='restart'/;
    });
}

if (!$stage) {
    prep();
    start();
} else {
    $gho= selectguest($gn,$gho);
}
if ($stage<2) {
    guest_await_reboot($ho,$gho,2000);
    guest_destroy($ho,$gho);
}

rewrite_config_nocd();
start();
guest_await_dhcp_tcp($gho,300);
guest_check_up($gho);
