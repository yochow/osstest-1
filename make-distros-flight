#!/bin/bash

# This is part of "osstest", an automated testing framework for Xen.
# Copyright (C) 2009-2013 Citrix Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


set -e

branch=$1
xenbranch=$2
blessing=$3
buildflight=$4

flight=`./cs-flight-create $blessing $branch`

. cri-common
. ap-common
. mfi-common

defsuite=`getconfig DebianSuite`
defguestsuite=`getconfig GuestDebianSuite`

case $branch in
  distros-debian-*) debian_suite=${branch#distros-debian-} ;;
  *)                echo $branch >&2; exit 1               ;;
esac

job_create_build_filter_callback () {
  local job=$1; shift

  case "$job" in
    build-*-libvirt) return 1;;
  esac
  case " $* " in
    *" enable_xsm=true "*) return 1;;
  esac
  return 0
}

if [ x$buildflight = x ]; then

  WANT_XEND=false REVISION_LINUX_OLD=disable

  create_build_jobs

else

  bfi=$buildflight.

fi

job_create_test_filter_callback () {
  if [ "$xenarch" = "i386" ]; then return 1; fi
  return 0
}

test_matrix_branch_filter_callback () {
    :
}

test_do_one_netboot () {
  local diurl=

  if [ x$gsuite = xsnapshot ] ; then
      diurl="http://d-i.debian.org/daily-images/$domU/daily/netboot"
      gsuite=sid
      gver=daily
  else
    local mirror="http://`getconfig DebianMirrorHost`/`getconfig DebianMirrorSubpath`"
    diurl="$mirror/dists/$gsuite/main/installer-$domU/current/images/netboot"
    gver=$gsuite
  fi

  case ${domU}_${gsuite} in
    armhf_squeeze) return;; # No armhf in Squeeze
    armhf_wheezy) return;; # No armhf guest support in Wheezy
    *) ;;
  esac

  stripy bootloader pvgrub pygrub \
    "$xenarch" "amd64" \
    "$dom0arch" "i386" \
    "$domU" "amd64" \

  case $domU in
    i386|amd64)
      diurl="$diurl/xen";;
    arm64)
      diurl="$diurl/debian-installer/arm64";;
  esac

  case ${dom0arch}_${domU}_${gsuite} in
    arm*_arm*_*) bootloader="pygrub";; # no pvgrub for arm

    # Needs a menu.lst, not present in Squeeze+ due to switch to grub2,
    # workedaround in Jessie+ with pv-grub-menu package.
    *_squeeze) bootloader="pygrub";;
    *_wheezy) bootloader="pygrub";;

    # pv-grub-x86_64.gz is not built by 32-bit dom0 userspace build.
    i386_amd64_*) bootloader="pygrub";;
  esac

  job_create_test                                               \
   test-$xenarch$kern-$dom0arch-$domU-$gver-netboot-$bootloader \
    test-debian-di xl $xenarch $dom0arch                        \
      kernbuildjob=${bfi}build-$dom0arch-$kernbuild             \
      debian_arch=$domU                                         \
      debian_suite=$gsuite                                      \
      debian_method=netboot                                     \
      debian_netboot_kernel="$diurl/vmlinuz"                    \
      debian_netboot_ramdisk="$diurl/initrd.gz"                 \
      debian_bootloader=$bootloader                             \
      all_hostflags=$most_hostflags
}

test_matrix_do_one () {
  case ${xenarch} in
  amd64) domUarches="amd64 i386";;
  armhf) domUarches="armhf";;
  esac

  for domU in $domUarches ; do

    if [ -n $debian_suite ] ; then
        gsuite=$debian_suite

        test_do_one_netboot

    fi

  done
}

test_matrix_iterate

echo $flight

# Local variables:
# mode: sh
# sh-basic-offset: 2
# indent-tabs-mode: nil
# End:
